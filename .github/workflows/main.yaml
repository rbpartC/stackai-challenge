on: [push]

name: CI

permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  precommit:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install pre-commit
        run: pip install pre-commit

      - name: Run pre-commit hooks
        run: pre-commit run --all-files

  test:
    runs-on: ubuntu-latest
    needs: precommit
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Set up directories
        run: |
          mkdir -p ./static/badges
          mkdir -p ./static/reports
          touch ./static/index.html

      # NOTE: We could use docker based action to run tests in a container but we have few dependencies
      # so it simpler and probably faster to run directly
      - name: Install dependencies
        run: |
          pip install -r temporal-workflows/requirements.txt
          pip install pytest pytest-asyncio pytest-cov

      - name: Run tests with coverage
        run: |
          PYTHONPATH=temporal-workflows/app pytest --cov=temporal-workflows/app --cov-report=xml --cov-report=term temporal-workflows/tests
          cp coverage.xml ./static/reports/coverage.xml

      - name: Generate coverage badge
        uses: tj-actions/coverage-badge-py@v2
        with:
          output: ./static/badges/coverage.svg

      - name: Run security scan with Bandit
        run: |
          pip install bandit
          bandit -r temporal-workflows/app -f xml -o ./static/reports/bandit-report.xml || true

      - name: Setup Pages
        uses: actions/configure-pages@v5
     
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          path: ./static
          name: reports

      - name: Commit coverage badge
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git checkout -b badges
          git add ./static/badges/coverage.svg
          git commit -m "chore: update coverage badge [skip ci]" || echo "No changes to commit"
          git push -f origin HEAD:badges