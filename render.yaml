envVarGroups:
  - name: databases
    envVars:
      - key : TEST
        value: test-value
      
databases:
  - name: temporal-db
    # Core state db
    postgresMajorVersion: '17' 
    region: frankfurt
    plan: free
    databaseName: temporaldb
    user: temporaldbuser
    ipAllowList:
      - source: 0.0.0.0/0
        description: everywhere

services:
  # PG Bouncer. Should be private but not supported in free plan
  - type: pserv
    name: pgbouncerff
    runtime: docker
    # NOTE: service in != regions can't communicate privately ?
    region: frankfurt
    plan: standard
    # TODO: Should be pinned to a version
    repo: https://github.com/render-oss/docker-pgbouncer
    envVars:
      - key: DATABASE_URL
        fromDatabase:
          name:  temporal-db
          property: connectionString
      - key: POOL_MODE
        value: transaction
      - key: SERVER_RESET_QUERY
        value: DISCARD ALL
      - key: MAX_CLIENT_CONN
        value: 500
      - key: DEFAULT_POOL_SIZE
        value: 50

  - type: web
    # This is the visibility DB
    name: elasticsearch
    region: frankfurt
    plan: standard
    runtime: docker
    disk:
      name: esdata
      mountPath: /usr/share/elasticsearch/data
      sizeGB: 5
    repo: https://github.com/rbpartC/elasticsearch
    envVars:
      - fromGroup: temporal
      - key: discovery.type
        value: single-node
      - key: ES_JAVA_OPTS
        value: "-Xms512m -Xmx512m"
      - key: ELASTIC_PASSWORD
        generateValue: true

  - type: web
    name: temporal-frontend
    region: frankfurt
    plan: starter
    runtime: docker
    image: 
      url: temporalio/server:1.26.3.0

    envVars:
      - key: SERVICES
        value: frontend
      - key: DB
        value: postgresql12
      - key: POSTGRESQL_SEEDS
        fromService:
          name: pgbouncerff
          type: pserv
          property: host
      - key: POSTGRESQL_PORT
        fromService:
          name: pgbouncerff
          type: pserv
          property: port
      - key: POSTGRESQL_USER
        fromDatabase:
          name: temporal-db
          property: user
      - key: POSTGRESQL_PASSWORD
        fromDatabase:
          name: temporal-db
          property: password
      - key: POSTGRESQL_DBNAME
        fromDatabase:
          name: temporal-db
          property: database

      - key: ENABLE_ES
        value: "true"
      - key: ES_SEEDS
        fromService:
          name: elasticsearch
          type: web
          property: host

      # Default es user
      - key: ES_USER
        value: elastic
      - key: ES_PWD
        fromService:
          name: elasticsearch
          type: web
          envVarKey: ELASTIC_PASSWORD

  # - type: web
  #   name: temporal-ui
  #   region: frankfurt
  #   plan: free
  #   runtime: docker
  #   image:
  #     url: temporalio/ui:latest
  #   envVars:
  #     - key: TEMPORAL_ADRESS
  #       fromService:
  #         name: temporal-server
  #         type: pserv
  #         property: host